---
interface Props {
  metaDescription: string;
  title: string;
}

const { metaDescription, title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content={metaDescription}
    />
    <meta
      name="viewport"
      content="width=device-width"
    />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/favicon.webp"
    />
    <meta
      name="generator"
      content={Astro.generator}
    />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=DM+Sans:opsz,wght@9..40,300;9..40,400;9..40,500;9..40,600;9..40,700;9..40,800;9..40,900&display=swap");

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  :root {
    --text: 0 0% 91%;
    --darker-text: 0 0 85%;
    --background: 0 0% 5%;

    --dark-100: 0 0% 11%;
    --dark-300: 0 0% 17%;
    --dark-500: 0 0% 23%;
    --dark-700: 0 0% 29%;
    --dark-900: 0 0% 35%;

    --important: 49 85% 65%;
    --secondary: 200 40% 70%;

    --important-100: 49 85% 65%;
    --important-300: 49 85% 71%;
    --important-500: 49 85% 77%;
    --important-700: 49 85% 83%;
    --important-900: 49 85% 89%;

    --tag-version: 0 0% 70%;
    --tag-krystal: 200 50% 70%;
    --tag-type: 0 50% 70%;
    --tag-checked: var(--important);
  }
  ::-webkit-scrollbar {
    width: 1rem;
    background-color: transparent;
  }

  :hover::-webkit-scrollbar {
    background-color: hsl(var(--dark-300));
  }

  ::-webkit-scrollbar-thumb {
    background-color: transparent;
  }

  :hover::-webkit-scrollbar-thumb {
    background-color: hsl(var(--text) / 0.7);
  }

  ::selection {
    background-color: hsl(var(--text));
    color: hsl(var(--background));
  }

  @media (max-width: 570px) {
    ::-webkit-scrollbar  {
      display: none;
    }
  }

  html,
  body {
    height: 100%;
    scrollbar-gutter: auto;
  }

  body {
    margin: 0;

    color: hsl(var(--text));
    background: hsl(var(--background));
    font-family: "DM Sans", sans-serif;

    background-image: url(/hsr-logo.png);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    background-clip: fixed;
    overflow-y: scroll;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin: 0;
  }

  h1 {
    font-size: clamp(1.5rem, 1.4038rem + 0.3077vw, 1.75rem);
  }

  h2 {
    font-size: clamp(1.25rem, 1.1538rem + 0.3077vw, 1.5rem);
  }

  h3 {
    font-size: clamp(1.1rem, 1.0615rem + 0.1231vw, 1.2rem);
  }

  img {
    display: block;
  }

  svg {
    width: 100%;
    aspect-ratio: 1;
  }

  button {
    font-size: inherit;
    font-family: inherit;
  }

  hr {
    border-color: hsl(var(--dark-700));
  }

  .important {
    color: hsl(var(--important));
    font-weight: 700;
  }

  .optional {
    color: hsl(var(--dark-900));
    font-size: 80%;
  }

  .svg-container {
    display: grid;
    max-width: 18px;
    height: auto;
  }

  .five-stars {
  background: linear-gradient(180deg, #885550, #c9a36a 53%);
}

  .four-stars {
  background: linear-gradient(180deg,#343659,#8a5fcc 53%);
}

.tooltip-action {
  text-decoration: underline dotted;
  text-underline-offset: 2px;
  position: relative;
}

.tooltip-action:is(:hover) {
  cursor: help;
}

.tooltip {
  position: absolute;
  top: 0;
  left: -15px;
  right: -15px;
  background-color: hsl(var(--background));
  color: hsl(var(--text));
  border: 1px solid hsl(var(--darker-text));
  padding: 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  pointer-events: none;
  transition: opacity 0.2s;
  opacity: 0;
  text-align: center;
}

.tooltip.show {
  opacity: 1;
}
</style>
